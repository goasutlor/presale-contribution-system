name: Deploy to AWS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: false
        
    - name: Clear npm cache and node_modules
      run: |
        npm cache clean --force
        rm -rf node_modules
        rm -rf client/node_modules
        rm -f package-lock.json
        rm -f client/package-lock.json
        
    - name: Install dependencies
      run: |
        npm install --legacy-peer-deps --force
        cd client && npm install --legacy-peer-deps --force
        
    - name: Verify TypeScript versions
      run: |
        echo "Root TypeScript version:"
        npm list typescript
        echo "Client TypeScript version:"
        cd client && npm list typescript
        
    - name: Build application
      run: |
        npm run build
        
    - name: Deploy to AWS App Runner
      if: github.ref == 'refs/heads/main'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
      run: |
        echo "ðŸš€ Deploying to AWS App Runner..."
        
        # Install AWS CLI
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install
        
        # Configure AWS CLI
        aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        aws configure set default.region $AWS_REGION
        
        # Create IAM role for App Runner
        cat > trust-policy.json << EOF
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "build.apprunner.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
        EOF
        
        # Create IAM role
        aws iam create-role --role-name AppRunnerServiceRole --assume-role-policy-document file://trust-policy.json || echo "Role already exists"
        aws iam attach-role-policy --role-name AppRunnerServiceRole --policy-arn arn:aws:iam::aws:policy/service-role/AppRunnerServicePolicyForECRAccess || echo "Policy already attached"
        
        # Get AWS Account ID
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        
        # Create App Runner service configuration
        cat > apprunner-service.json << EOF
        {
          "ServiceName": "presale-contribution-system",
          "SourceConfiguration": {
            "CodeRepository": {
              "RepositoryUrl": "https://github.com/goasutlor/presale-contribution-system",
              "SourceCodeVersion": {
                "Type": "BRANCH",
                "Value": "main"
              },
              "CodeConfiguration": {
                "ConfigurationSource": "REPOSITORY",
                "CodeConfigurationValues": {
                  "Runtime": "NODEJS_18",
                  "BuildCommand": "npm cache clean --force && npm install --legacy-peer-deps --force && cd client && npm install --legacy-peer-deps --force && npm run build",
                  "StartCommand": "npm start",
                  "RuntimeEnvironmentVariables": {
                    "NODE_ENV": "production",
                    "PORT": "5001",
                    "JWT_SECRET": "your-super-secret-jwt-key-change-in-production",
                    "DB_PATH": "/tmp/data/presale_contributions.db"
                  }
                }
              }
            }
          },
          "InstanceConfiguration": {
            "Cpu": "0.25 vCPU",
            "Memory": "0.5 GB",
            "InstanceRoleArn": "arn:aws:iam::${ACCOUNT_ID}:role/AppRunnerServiceRole"
          }
        }
        EOF
        
        # Create or update App Runner service
        aws apprunner create-service --cli-input-json file://apprunner-service.json || echo "Service already exists, updating..."
        
        # Get service URL
        sleep 30
        SERVICE_URL=$(aws apprunner describe-service --service-arn "arn:aws:apprunner:us-east-1:${ACCOUNT_ID}:service/presale-contribution-system" --query 'Service.ServiceUrl' --output text)
        
        echo "âœ… Deployment completed successfully!"
        echo "ðŸ“± Service URL: https://$SERVICE_URL"
        echo "ðŸ”— AWS Console: https://console.aws.amazon.com/apprunner/home?region=us-east-1#/services"
